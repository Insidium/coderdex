{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Header","branding","href","Test","test","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3cd8ebef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'DELETE_CONTACT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: state.contacts.filter(\n\t\t\t\t\t(contact) => contact.id !== action.payload\n\t\t\t\t)\n\t\t\t};\n\t\tcase 'ADD_CONTACT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: [action.payload, ...state.contacts]\n\t\t\t};\n\t\tcase 'UPDATE_CONTACT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: state.contacts.map((contact) =>\n\t\t\t\t\tcontact.id === action.payload.id\n\t\t\t\t\t\t? (contact = action.payload)\n\t\t\t\t\t\t: contact\n\t\t\t\t)\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport class Provider extends Component {\n\tstate = {\n\t\tcontacts: [],\n\t\tdispatch: (action) => this.setState((state) => reducer(state, action))\n\t};\n\n\tasync componentDidMount() {\n\t\tconst res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n\t\tthis.setState({ contacts: res.data });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Context.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</Context.Provider>\n\t\t);\n\t}\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n\tstate = {\n\t\tshowContactInfo: false\n\t};\n\tonDeleteClick = async (id, dispatch) => {\n\t\ttry {\n\t\t\tawait axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\t\t\tdispatch({ type: 'DELETE_CONTACT', payload: id });\n\t\t} catch (e) {\n\t\t\tdispatch({ type: 'DELETE_CONTACT', payload: id });\n\t\t}\n\t};\n\trender() {\n\t\tconst { id, name, email, phone } = this.props.contact;\n\t\tconst { showContactInfo } = this.state;\n\t\treturn (\n\t\t\t<Consumer>\n\t\t\t\t{(value) => {\n\t\t\t\t\tconst { dispatch } = value;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='card card-body mb-3'>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tshowContactInfo: !this.state.showContactInfo\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclassName='fas fa-sort-down'\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tonClick={this.onDeleteClick.bind(this, id, dispatch)}\n\t\t\t\t\t\t\t\t\tclassName='fas fa-times'\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer', float: 'right', color: 'red' }}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t<Link to={`contact/edit/${id}`}>\n\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\tclassName='fas fa-pencil-alt'\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\t\t\tfloat: 'right',\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: '1rem'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t{showContactInfo ? (\n\t\t\t\t\t\t\t\t<ul className='list-group'>\n\t\t\t\t\t\t\t\t\t<li className='list-group-item'>Email: {email}</li>\n\t\t\t\t\t\t\t\t\t<li className='list-group-item'>Phone: {phone}</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t);\n\t}\n}\n\nContact.propTypes = {\n\tcontact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Consumer>\n\t\t\t\t{(value) => {\n\t\t\t\t\tconst { contacts } = value;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<h1 className='display-4 mb2'>\n\t\t\t\t\t\t\t\t<span className='text-info'>Coder</span> List\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{contacts.map((contact) => (\n\t\t\t\t\t\t\t\t<Contact key={contact.id} contact={contact} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t);\n\t}\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n\tlabel,\n\tname,\n\tvalue,\n\tplaceholder,\n\ttype,\n\tonChange,\n\terror\n}) => {\n\treturn (\n\t\t<div className='form-group'>\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tname={name}\n\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t'is-invalid': error\n\t\t\t\t})}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t{error && <div className='invalid-feedback'>{error}</div>}\n\t\t</div>\n\t);\n};\n\nTextInputGroup.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tplaceholder: PropTypes.string.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terror: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n\ttype: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\tstate = {\n\t\tname: '',\n\t\temail: '',\n\t\tphone: '',\n\t\terrors: {}\n\t};\n\n\tonChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\tonSubmit = async (dispatch, e) => {\n\t\te.preventDefault();\n\n\t\tconst { name, email, phone } = this.state;\n\n\t\t//Check for errors\n\t\tif (name === '') {\n\t\t\tthis.setState({\n\t\t\t\terrors: {\n\t\t\t\t\tname: 'Name is required'\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (email === '') {\n\t\t\tthis.setState({\n\t\t\t\terrors: {\n\t\t\t\t\temail: 'Email is required'\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (phone === '') {\n\t\t\tthis.setState({\n\t\t\t\terrors: {\n\t\t\t\t\tphone: 'Phone is required'\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst newContact = {\n\t\t\tname,\n\t\t\temail,\n\t\t\tphone\n\t\t};\n\n\t\tconst res = await axios.post(\n\t\t\t'https://jsonplaceholder.typicode.com/users',\n\t\t\tnewContact\n\t\t);\n\n\t\tdispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n\t\t// clear state\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tphone: '',\n\t\t\terrors: {}\n\t\t});\n\n\t\t// kind of redirect to home route\n\t\tthis.props.history.push('/');\n\t};\n\n\trender() {\n\t\tconst { name, email, phone, errors } = this.state;\n\n\t\treturn (\n\t\t\t<Consumer>\n\t\t\t\t{(value) => {\n\t\t\t\t\tconst { dispatch } = value;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='card mb3'>\n\t\t\t\t\t\t\t<div className='card-header'>Add Contact</div>\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\t\t\t\t\t\t\t\t\t<TextInputGroup\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter name...'\n\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\terror={errors.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextInputGroup\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter email...'\n\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\terror={errors.email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextInputGroup\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter phone...'\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\terror={errors.phone}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvalue='Add Contact'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-light btn-block'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t);\n\t}\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\tstate = {\n\t\tname: '',\n\t\temail: '',\n\t\tphone: '',\n\t\terrors: {}\n\t};\n\n\tasync componentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tconst res = await axios.get(\n\t\t\t`https://jsonplaceholder.typicode.com/users/${id}`\n\t\t);\n\t\tconst contact = res.data;\n\t\tthis.setState({\n\t\t\tname: contact.name,\n\t\t\temail: contact.email,\n\t\t\tphone: contact.phone\n\t\t});\n\t}\n\n\tonChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\tonSubmit = async (dispatch, e) => {\n\t\te.preventDefault();\n\n\t\tconst { name, email, phone } = this.state;\n\n\t\t//Check for errors\n\t\tif (name === '') {\n\t\t\tthis.setState({\n\t\t\t\terrors: {\n\t\t\t\t\tname: 'Name is required'\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (email === '') {\n\t\t\tthis.setState({\n\t\t\t\terrors: {\n\t\t\t\t\temail: 'Email is required'\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (phone === '') {\n\t\t\tthis.setState({\n\t\t\t\terrors: {\n\t\t\t\t\tphone: 'Phone is required'\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst updContact = {\n\t\t\tname,\n\t\t\temail,\n\t\t\tphone\n\t\t};\n\n\t\tconst { id } = this.props.match.params;\n\n\t\tconst res = await axios.put(\n\t\t\t`https://jsonplaceholder.typicode.com/users/${id}`,\n\t\t\tupdContact\n\t\t);\n\n\t\tdispatch({ type: 'UPDATE_DATA', payload: res.data });\n\n\t\t// clear state\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tphone: '',\n\t\t\terrors: {}\n\t\t});\n\n\t\t// kind of redirect to home route\n\t\tthis.props.history.push('/');\n\t};\n\n\trender() {\n\t\tconst { name, email, phone, errors } = this.state;\n\n\t\treturn (\n\t\t\t<Consumer>\n\t\t\t\t{(value) => {\n\t\t\t\t\tconst { dispatch } = value;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='card mb3'>\n\t\t\t\t\t\t\t<div className='card-header'>Edit Contact</div>\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\t\t\t\t\t\t\t\t\t<TextInputGroup\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter name...'\n\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\terror={errors.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextInputGroup\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter email...'\n\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\terror={errors.email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextInputGroup\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter phone...'\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\terror={errors.phone}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvalue='Update Contact'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-light btn-block'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t);\n\t}\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n\tconst { branding } = props;\n\treturn (\n\t\t<nav className='navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0'>\n\t\t\t<div className='container'>\n\t\t\t\t<a href='/' className='navbar-brand'>\n\t\t\t\t\t{branding}\n\t\t\t\t</a>\n\t\t\t\t<div>\n\t\t\t\t\t<ul className='navbar-nav mr-auto'>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<Link to='/' className='nav-link'>\n\t\t\t\t\t\t\t\t<i className='fas fa-home'></i> Home\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<Link to='/about' className='nav-link'>\n\t\t\t\t\t\t\t\t<i className='fas fa-info-circle'></i> About\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<Link to='/contact/add' className='nav-link'>\n\t\t\t\t\t\t\t\t<i className='fas fa-plus-circle'></i> Add\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nHeader.defaultProps = {\n\tbranding: 'My App'\n};\n\nHeader.propTypes = {\n\tbranding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className='display-4'>About Coderdex</h1>\n\t\t\t<p className='lead'>Simple app to manage your Coder contacts!</p>\n\t\t\t<p className='text- secondary'>Version 1.0.0</p>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className='display-4'>\n\t\t\t\t<span className='text-danger'>404</span> Page Not Found\n\t\t\t</h1>\n\t\t\t<p className='lead'>\n\t\t\t\tSorry, that page does not exist. <i className='far fa-frown'></i>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n\tstate = {\n\t\ttest: 'test'\n\t};\n\t//LIFECYCLE METHODS\n\n\t// componentDidMount executes after component mounts - usually used to call APIs/HTTP requests\n\t// componentDidMount() {\n\t// \tfetch('https://jsonplaceholder.typicode.com/todos/1')\n\t// \t\t.then((response) => response.json())\n\t// \t\t.then((data) =>\n\t// \t\t\tthis.setState({ title: data.title, completed: data.completed })\n\t// \t\t);\n\t// }\n\t// // componentWillMount executes before component mounts\n\t// componentWillMount() {\n\t// \tconsole.log('...componentWillMount');\n\t// }\n\t// // componentDidUpdate executes only after component updates\n\t// componentDidUpdate() {\n\t// \tconsole.log('...componentDidUpdate');\n\t// }\n\t// // componentDidUpdate executes as component updates - deprecated\n\t// componentWillUpdate() {\n\t// \tconsole.log('...componentWillUpdate');\n\t// }\n\t// // componentWillReceiveProps - deprecated - now use getDerivedStateFromProps below\n\t// componentWillReceiveProps(nextProps, nextState) {\n\t// \tconsole.log('...componentWillReceiveProps');\n\t// }\n\n\t// static getDerivedStateFromProps(nextProps, prevState) {\n\t// \treturn null;\n\t// }\n\n\t// getSnapshotBeforeUpdate(prevProps, prevState) {\n\t// \tconsole.log('...getSnapshotBeforeUpdate');\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Test Component</h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Test;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<Provider>\n\t\t\t<Router>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<Header branding='Coderdex' />\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/' component={Contacts}></Route>\n\t\t\t\t\t\t\t<Route exact path='/contact/add' component={AddContact}></Route>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/contact/edit/:id'\n\t\t\t\t\t\t\t\tcomponent={EditContact}\n\t\t\t\t\t\t\t></Route>\n\t\t\t\t\t\t\t<Route exact path='/about' component={About}></Route>\n\t\t\t\t\t\t\t<Route exact path='/test' component={Test}></Route>\n\t\t\t\t\t\t\t<Route component={NotFound}></Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}